Todo
  Visualizing tool
    Implement Reingold-Tilford
      Will set the breadth position of nodes
      Depth will be based on the hierarchical level

      Relational positioning will be handled by a different class
      Pass the data, then return a nodes with coordinates

      Data
        id
        text
        parent
        children
      DataState
        selected
        ...
      AllData
        Flat linear map if data using id as key
    Implement Node/DataDrawing


Data
  Should we keep the array of children in the parents?
  Have a function that will add children to the parent list
    

Reingold-Tilford
  Have to create a unit test
  At least for the major calculation to prove everything is working
  Create basic tests
    Component test so that we can detect the error faster
    Can be applied in every aspect of life
    Automates checking, therefore frees up resources
    Implementation
      Any level that make sense
      Need to know if there is a Javascript unit testing
    Current State:
      Need the unit test to automate checking of errors


Chain function
  Will make coding faster
    This is just my theory, I want to try it
    Issues
      Will return the object instead of the specific state change
    Pros
      Easier to understand the chaining of functions
      This is good for internal chaining of functions
      This is more of combination of the hard wired values
        VS pure function that gives versatility of usage
      This is the classic example of specific vs general
      Versatility has a cost
      Even the mind knows at some point, it has to hard wire things
        to save resources
      Have to define conventional object oriented vs pure functions
        Sometimes, hiding the information is better for performance issue
        This is only true if the thing is already proven mostly right
    Findings:
      Have to always have an easy way to uncover the Implementation
        It has to be debuggable, so that I can fix it easily
      Should have a way to encapsulate

Priorities
  List all the things I have to do, choose only 2
    Artificial intelligence
    Data visualizer
    Farm
    Study high paying job
    Electronics
    Work: Software Engineer

Steps to follow to get to the goal faster:
  Create schedule and follow without fail
  Distraction is really in our vein, because the brain is trying to be as versatile as possible to increase survivability
  Therefore I have to guide my brain that we will have a far better chance of survival if:
    Finish data visualizer
    Study Artificial intelligence
    Do better at work as a software Engineer
    Improve family conditions

Unit test
  To be able to automate testing
  Have to always frame what I want to implement

  Implementation
    Will use the unit test to run checking if the Reingold-Tilford is working as expected
    It is inevitable to change the checker if the specification has changed

  Should I separate file?
    For now, whatever that works, I implement
    Then correct assumptions later on

    Simpler, better

Event Handler
  Every events should be controlled in controls, so that there is a high level event manager
  Thoroough management will be done on the fly 

  Review Implementation
    Check the latest changes

  When woke up
    Be grateful that I woke up
    As it is not in my control how I exist in the first place
    I will die soon, make every moment counts
    I am just delaying my tasks
    Doing it now will save me a lot of trouble and pain
    If I just stick to what I have to do, everything I love to do will follow
  
  When working
    Always jot down everything I have to do when stuck for 3 seconds
    Saving me seconds now will save me several of hours later
    
  Status
    Error getting children
      It is from getting the childrenIds from the allMetaData
      In my current system, I just put a blank view.
      When creating a node, it should have a basic meta fields
      Go back from the state
    Fix DataManager
      Get the highest assigned id by getting through all the existing data
        Can be optimized later on
      How?
        Can analyze from the AllData
        We can create a meta tester later?
          Yes, depending on the state
          Deal with it later
    How to add new data?
      allData 
        id
          id  -> Is this necessary? I think we could get away with that, deal with it later for optimization
          name
      allMetaData
        id
          parentId
          childrenIds
Implement
  Edit text
    When enter is pressed:
      Dispose text input
      Set the text in the node and textblock
  Create new node
  Select Node
    Double click goes editing
    Enter will make new child node
Need scale of how much I have done so far
  Progress bar
  How to measure uncertainty?

Target
  5 commits
  Fix zoom
  



